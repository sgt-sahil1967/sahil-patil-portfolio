document.addEventListener('DOMContentLoaded', function() {initLoader();initNavigation();initScrollAnimations();initCounters();initSmoothScroll();initParallax();});function initLoader() {const loader = document.getElementById('loading-screen');window.addEventListener('load', function() {setTimeout(() => {loader.style.opacity = '0';setTimeout(() => {loader.style.display = 'none';}, 500);}, 1000);});}function initNavigation() {const navbar = document.querySelector('.navbar');const navLinks = document.querySelectorAll('.nav-link');window.addEventListener('scroll', function() {const homeSection = document.getElementById('home');const homeSectionHeight = homeSection ? homeSection.offsetHeight : 0;if (window.scrollY > homeSectionHeight - 100) {navbar.classList.add('scrolled');navbar.classList.remove('navbar-hidden');}else {navbar.classList.remove('scrolled');navbar.classList.add('navbar-hidden');}});const sections = document.querySelectorAll('section[id]');function highlightActiveNav() {const scrollPos = window.scrollY + 100;sections.forEach(section => {const sectionTop = section.offsetTop;const sectionHeight = section.offsetHeight;const sectionId = section.getAttribute('id');if (scrollPos >= sectionTop && scrollPos < sectionTop + sectionHeight) {navLinks.forEach(link => {link.classList.remove('active');if (link.getAttribute('href') === `#${sectionId}`) {link.classList.add('active');}});}});}window.addEventListener('scroll', highlightActiveNav);navLinks.forEach(link => {link.addEventListener('click', function() {const navbarCollapse = document.querySelector('.navbar-collapse');if (navbarCollapse.classList.contains('show')) {bootstrap.Collapse.getInstance(navbarCollapse).hide();}});});}function initSmoothScroll() {const links = document.querySelectorAll('a[href^="#"]');links.forEach(link => {link.addEventListener('click', function(e) {e.preventDefault();const targetId = this.getAttribute('href').substring(1);const targetSection = document.getElementById(targetId);if (targetSection) {const offsetTop = targetSection.offsetTop - 80;window.scrollTo({top: offsetTop, behavior: 'smooth' });}});});}function initScrollAnimations() {const observerOptions = {threshold: 0.1, rootMargin: '0px 0px -50px 0px' };const observer = new IntersectionObserver(function(entries) {entries.forEach(entry => {if (entry.isIntersecting) {entry.target.classList.add('animated');if (entry.target.classList.contains('skill-category')) {animateSkillCard(entry.target);}if (entry.target.classList.contains('timeline-item')) {animateTimelineItem(entry.target);}if (entry.target.classList.contains('project-card')) {animateProjectCard(entry.target);}}});}, observerOptions);const animateElements = document.querySelectorAll( '.skill-category, .timeline-item, .project-card, .contact-item, .about-content, .section-header' );animateElements.forEach(el => {el.classList.add('animate-on-scroll');observer.observe(el);});}function animateSkillCard(card) {const skillItems = card.querySelectorAll('.skill-list li');skillItems.forEach((item, index) => {setTimeout(() => {item.style.opacity = '1';item.style.transform = 'translateX(0)';}, index * 100);});}function animateTimelineItem(item) {const content = item.querySelector('.timeline-content');const listItems = item.querySelectorAll('.timeline-body li');content.style.transform = 'translateX(0)';content.style.opacity = '1';listItems.forEach((li, index) => {setTimeout(() => {li.style.opacity = '1';li.style.transform = 'translateX(0)';}, index * 150);});}function animateProjectCard(card) {const tags = card.querySelectorAll('.tag');tags.forEach((tag, index) => {setTimeout(() => {tag.style.opacity = '1';tag.style.transform = 'scale(1)';}, index * 100);});}function initCounters() {const counters = document.querySelectorAll('.stat-number');const counterObserver = new IntersectionObserver(function(entries) {entries.forEach(entry => {if (entry.isIntersecting) {animateCounter(entry.target);counterObserver.unobserve(entry.target);}});}, {threshold: 0.5 });counters.forEach(counter => {counterObserver.observe(counter);});}function animateCounter(counter) {const target = parseInt(counter.getAttribute('data-count'));const duration = 2000;const step = target / (duration / 16);let current = 0;const timer = setInterval(() => {current += step;counter.textContent = Math.floor(current);if (current >= target) {counter.textContent = target;clearInterval(timer);}}, 16);}function initParallax() {const heroSection = document.getElementById('home');window.addEventListener('scroll', function() {const scrolled = window.pageYOffset;const rate = scrolled * -0.5;if (heroSection) {heroSection.style.transform = `translateY(${rate}px)`;}});}document.addEventListener('DOMContentLoaded', function() {const projectCards = document.querySelectorAll('.project-card');projectCards.forEach(card => {card.addEventListener('mouseenter', function() {this.style.transform = 'translateY(-10px) rotateX(5deg)';});card.addEventListener('mouseleave', function() {this.style.transform = 'translateY(0) rotateX(0deg)';});});});function initContactEnhancements() {const contactItems = document.querySelectorAll('.contact-item');contactItems.forEach(item => {item.addEventListener('mouseenter', function() {const icon = this.querySelector('.contact-icon');icon.style.transform = 'scale(1.1) rotate(5deg)';});item.addEventListener('mouseleave', function() {const icon = this.querySelector('.contact-icon');icon.style.transform = 'scale(1) rotate(0deg)';});});}document.addEventListener('DOMContentLoaded', initContactEnhancements);document.addEventListener('DOMContentLoaded', function() {const skillCategories = document.querySelectorAll('.skill-category');skillCategories.forEach(category => {category.addEventListener('mouseenter', function() {const icon = this.querySelector('.skill-icon');icon.style.transform = 'scale(1.1) rotateY(180deg)';});category.addEventListener('mouseleave', function() {const icon = this.querySelector('.skill-icon');icon.style.transform = 'scale(1) rotateY(0deg)';});});});document.addEventListener('DOMContentLoaded', function() {const timelineMarkers = document.querySelectorAll('.timeline-marker');timelineMarkers.forEach((marker, index) => {marker.style.animationDelay = `${index * 0.2}s`;marker.classList.add('float-animation');});});const additionalCSS = ` .float-animation {animation: markerFloat 3s ease-in-out infinite;}@keyframes markerFloat {0%, 100% {transform: translateY(0);}50% {transform: translateY(-5px);}}.skill-list li {opacity: 0;transform: translateX(-20px);transition: all 0.3s ease;}.timeline-body li {opacity: 0;transform: translateX(-20px);transition: all 0.3s ease;}.tag {opacity: 0;transform: scale(0.8);transition: all 0.3s ease;}.timeline-content {opacity: 0;transform: translateX(30px);transition: all 0.6s ease;}`;const style = document.createElement('style');style.textContent = additionalCSS;document.head.appendChild(style);function throttle(func, limit) {let inThrottle;return function() {const args = arguments;const context = this;if (!inThrottle) {func.apply(context, args);inThrottle = true;setTimeout(() => inThrottle = false, limit);}};}const throttledScroll = throttle(function() {}, 16);window.addEventListener('scroll', throttledScroll);document.addEventListener('DOMContentLoaded', function() {const themeCube = document.getElementById('themeCube');let currentThemeIndex = 0;let themes = [];let isTransitioning = false;fetch('/static/themes.json') .then(response => response.json()) .then(data => {themes = Object.keys(data).map(key => ({name: key, ...data[key] }));console.log('Loaded themes:', themes.length);}) .catch(error => {console.error('Error loading themes:', error);themes = [ {name: 'yellow-theme', background: 'static/images/bg-yellow.webp', colors: {dominant: '#ffd700', palette: ['#ffd700', '#ffeb3b', '#c09f5d', '#7c6139', '#998d6a', '#97836c'] }}, {name: 'orange-theme', background: 'static/images/bg-orange.webp', colors: {dominant: '#d2a38d', palette: ['#d2a38d', '#9c5b4d', '#8fa991', '#4f292c', '#6d8cb0', '#726973'] }}, {name: 'purple-theme', background: 'static/images/bg-purple.webp', colors: {dominant: '#a18dbc', palette: ['#a18dbc', '#e19dac', '#6766b3', '#acb2e1', '#755ca5', '#60637a'] }}, {name: 'blue-theme', background: 'static/images/bg-blue.webp', colors: {dominant: '#779dbe', palette: ['#779dbe', '#d5c3b6', '#444f44', '#948a7c', '#9bbad2', '#6c8a93'] }}, {name: 'green-theme', background: 'static/images/bg-green.webp', colors: {dominant: '#775e5b', palette: ['#775e5b', '#5a4448', '#2a1c2e', '#3b2958', '#523a76', '#6b645c'] }}];});function switchTheme() {if (isTransitioning || themes.length === 0) return;isTransitioning = true;document.body.classList.add('theme-transitioning');currentThemeIndex = (currentThemeIndex + 1) % themes.length;const newTheme = themes[currentThemeIndex];console.log(`Switching to ${newTheme.name}`, newTheme.colors.dominant);const root = document.documentElement;const colors = newTheme.colors;root.style.setProperty('--current-bg', `url('/${newTheme.background}')`);root.style.setProperty('--accent-color', colors.dominant);root.style.setProperty('--primary-color', colors.dominant);root.style.setProperty('--secondary-color', colors.palette[1] || colors.dominant);root.style.setProperty('--theme-secondary', colors.palette[2] || colors.palette[1]);root.style.setProperty('--theme-tertiary', colors.palette[3] || colors.palette[0]);root.style.setProperty('--gradient-primary', `linear-gradient(135deg, ${colors.dominant}0%, ${colors.palette[1]}100%)`);root.style.setProperty('--gradient-accent', `linear-gradient(135deg, ${colors.dominant}0%, ${colors.palette[1]}100%)`);const hexToRgb = (hex) => {const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result ? {r: parseInt(result[1], 16), g: parseInt(result[2], 16), b: parseInt(result[3], 16) }: null;};const dominantRgb = hexToRgb(colors.dominant);if (dominantRgb) {root.style.setProperty('--shadow-light', `0 5px 15px rgba(${dominantRgb.r}, ${dominantRgb.g}, ${dominantRgb.b}, 0.2)`);root.style.setProperty('--shadow-medium', `0 10px 30px rgba(${dominantRgb.r}, ${dominantRgb.g}, ${dominantRgb.b}, 0.3)`);root.style.setProperty('--shadow-heavy', `0 20px 60px rgba(${dominantRgb.r}, ${dominantRgb.g}, ${dominantRgb.b}, 0.4)`);}const togglerSvg = `url("data:image/svg+xml,%3csvg xmlns='http: root.style.setProperty('--navbar-toggler-icon', togglerSvg);const cubes = themeCube.querySelectorAll('.cube-face');cubes.forEach(face => {face.style.borderColor = colors.dominant;face.style.background = `rgba(${dominantRgb?.r || 255}, ${dominantRgb?.g || 105}, ${dominantRgb?.b || 180}, 0.1)`;face.style.boxShadow = `0 0 20px rgba(${dominantRgb?.r || 255}, ${dominantRgb?.g || 105}, ${dominantRgb?.b || 180}, 0.3)`;});const dots = themeCube.querySelectorAll('.cube-dot');dots.forEach(dot => {dot.style.background = colors.dominant;dot.style.boxShadow = `0 0 10px rgba(${dominantRgb?.r || 255}, ${dominantRgb?.g || 105}, ${dominantRgb?.b || 180}, 0.6)`;});setTimeout(() => {document.body.classList.remove('theme-transitioning');isTransitioning = false;}, 800);}if (themeCube) {themeCube.addEventListener('click', function() {this.style.transform = 'scale(0.9) rotateX(180deg) rotateY(180deg)';setTimeout(() => {this.style.transform = 'scale(1) rotateX(45deg) rotateY(45deg)';switchTheme();}, 150);});themeCube.addEventListener('mouseenter', function() {this.style.animationPlayState = 'paused';});themeCube.addEventListener('mouseleave', function() {this.style.animationPlayState = 'running';});}});